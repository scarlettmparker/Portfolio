// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MinecraftPlayer {
  id Int @id @default(autoincrement())
  usernames MinecraftUsername[]
  uuid String
}

model MinecraftUsername {
  id Int @id @default(autoincrement())
  username String @unique
  minecraftPlayerId Int?
  MinecraftPlayer MinecraftPlayer? @relation(fields: [minecraftPlayerId], references: [id])
}

model Game {
  id String @id
  player0 Boolean @default(false)
  player1 Boolean @default(false)
  player Int @default(0)
  state Json[] @default([])
}

model Piece {
  id String @id
  skin Int[]
  moveSets PieceMoveSet[]
}

model MoveSet {
  id Int @id @default(autoincrement())
  moves Int[]
  pieces PieceMoveSet[]
}

model PieceMoveSet {
  pieceId String
  moveSetId Int

  piece Piece @relation(fields: [pieceId], references: [id])
  moveSet MoveSet @relation(fields: [moveSetId], references: [id])

  @@id([pieceId, moveSetId])
}

model TextObject {
  id Int @id @default(autoincrement())
  title String
  level String
  text Text[]
}

model Text {
  id Int @id @default(autoincrement())
  text String
  language String
  textObjectId Int
  textObject TextObject @relation(fields: [textObjectId], references: [id])
  annotations Annotation[]
}

model Annotation {
  id Int @id @default(autoincrement())
  start Int
  end Int
  description String
  likes Int @default(0)
  dislikes Int @default(0)
  textId Int
  text Text @relation(fields: [textId], references: [id])
}